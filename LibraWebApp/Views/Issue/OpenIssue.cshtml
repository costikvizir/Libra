@model LibraBll.DTOs.Issue.IssueDTO
@{
    //Layout = "~/Views/Shared/_LayoutLTE.cshtml";
    Layout = null;
    if (Model != null)
    {
        Model.UserCreated = User.Identity.Name;
    }
}

<h3 class="accent-gray-dark mt-5">New Issue</h3>

@*@model LibraBll.DTOs.Pos.PosGetDTO*@

<style>
    .table thead th {
        background-color: #a6c5e4;
    }

    .col1 {
        width: 10%;
    }

    .col2 {
        width: 17%;
    }

    .col3 {
        width: 17%;
    }

    .col4 {
        width: 17%;
    }

    .col5 {
        width: 17%;
    }

    .col6 {
        width: 22%;
    }
</style>

@using (Html.BeginForm("AddIssue", "Issue", FormMethod.Post, new { id = "OpenIssueForm" }))
{
   
    <div class="card mb-0">
        <div class="card-header" style="background-color: lightgray">
            Add Issue for POS
        </div>
        <div class="card-body">
            <div class="row">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">POS Id</th>
                            <th scope="col">Pos Name</th>
                            <th scope="col">Telephone</th>
                            <th scope="col">Cellphone</th>
                            <th scope="col">Brand</th>
                            <th scope="col">Addres</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

	<div class="card mt-0">

		@Html.HiddenFor(model => model.PosId)
		
		<div class="card-header" style="background-color: lightgray">
			Add Issue
		</div>
		<div class="card-body">
			<div class="row">
				<div class="col-md-2">
					<label for="inputState" class="form-label">Issue Type</label>
					@Html.DropDownListFor(model => model.Type, new SelectList(new[] { "Technical Issue", "Software Issue", "Undefined" }), "select", new { @class = "form-select", id = "inputStatus" })

				</div>
				<div class="col-md-2">
					<label for="inputState" class="form-label">Subclass</label>
					@Html.DropDownListFor(model => model.SubType, new SelectList(new[] { "subclass1", "subclass2", "Undefined" }), "select", new { @class = "form-select", id = "inputStatus" })

				</div>

				<div class="col-md-2">
					<label for="inputState" class="form-label">Problem</label>
					@Html.DropDownListFor(model => model.Problem, new SelectList(new[] { "problem1", "problem2s", "Undefined" }), "select", new { @class = "form-select", id = "inputStatus" })

				</div>
				<div class="col-md-2">
					<label for="inputState" class="form-label">Priority</label>
					@Html.DropDownListFor(model => model.Priority, new SelectList(new[] { "High", "Medium", "Low" }), "select", new { @class = "form-select", id = "inputStatus" })

				</div>
				<div class="col-md-3">
					<label for="inputState" class="form-label">Status</label>
					@Html.DropDownListFor(model => model.Status, new SelectList(new[] { "Assigned", "In progress", "Pending" }), "New", new { @class = "form-select", id = "inputStatus" })

				</div>
			</div>
			<div class="row">
				<div class="col-md-4">
					<label for="inputAddress" class="form-label">Problem Description</label>
					<div class="input-group">
						@Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "height: 110px; resize: none;" })
					</div>
				</div>
				<div class="col-md-4">
					<label for="inputAddress" class="form-label">Solution</label>
					<div class="input-group">
						@Html.TextAreaFor(model => model.Solution, new { @class = "form-control", style = "height: 110px; resize: none;" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="row">
						<label for="inputState" class="form-label">Assigned To:</label>
						@Html.DropDownListFor(model => model.AssignedTo, new SelectList(new[] { "Administrator", "Technical User", "User" }), "Select Role", new { @class = "form-select", id = "inputassignedTo" })
					</div>
					<div class="row">
						<label for="inputmemo" class="form-label">Memo</label>
						<div class="input-group">
							<div class="input-group-text"><i class="fas fa-info"></i></div>
							@Html.TextBoxFor(model => model.Memo, new { @class = "form-control", placeholder = "Memo" })
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

    <div class="d-flex justify-content-start">
        <button type="submit" class="btn btn-primary mr-2" onclick="goToOpenIssue()">Open Issue</button>
        <button type="reset" class="btn btn-dark" onclick="resetForm()">Cancel</button>
    </div>
}


@*<script>
    var urlParams = new URLSearchParams(window.location.search);

    // Get the values of the parameters
    var posId = urlParams.get('PosId');
    var name = urlParams.get('Name');
    var telephone = urlParams.get('Telephone');
    var cellphone = urlParams.get('Cellphone');
    var city = urlParams.get('City');
    var fullAddress = urlParams.get('FullAddress');

    // Select the table row
    var row = document.querySelector('tbody tr');

    // Assign the values to the table cells
    row.querySelector('td:nth-child(1)').textContent = posId;
    row.querySelector('td:nth-child(2)').textContent = name;
    row.querySelector('td:nth-child(3)').textContent = telephone;
    row.querySelector('td:nth-child(4)').textContent = cellphone;
    row.querySelector('td:nth-child(5)').textContent = city;
    row.querySelector('td:nth-child(6)').textContent = fullAddress;

    //var urlParams = new URLSearchParams(window.location.search);

    // Get the values of the parameters
    //var posId = urlParams.get('PosId');

    // Assign the posId value to the hidden field
    document.getElementById('PosId').value = posId;
</script>*@

@*<script>
        function resetForm() {
            var form = document.getElementById("AddPosForm");
            form.reset();
        }
    </script>*@
