@{
	Layout = null;
}

@model LibraBll.DTOs.User.GetUserDTO

@section scripts{
	@Styles.Render("~/Content/css")
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/bootstrap")
}

@*@using (Html.BeginForm("UpdateUser", "User", FormMethod.Post, new { id = "UpdateUserForm" }))*@
@using (Ajax.BeginForm("UpdateUser", "User", new AjaxOptions { UpdateTargetId = "Paceholder to message", HttpMethod = "Post", OnSuccess = "CloseWindow()" }, new { id = "editForm", @class = "form-horizontal" }))
{
	<div class="modal-header">
		<h5 class="modal-title" id="exampleModalLabel">Edit User</h5>
		<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
	</div>
	<div class="modal-body">
		@Html.HiddenFor(model => model.Id)
		<div class="col-12">
			<label for="inputUserName" class="form-label">User Name</label>
			<div class="input-group">
				<div class="input-group-text"><i class="fas fa-user"></i></div>
				@Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "User Name" })
			</div>
			@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		</div>
		<div class="col-12">
			<label for="inputLogin" class="form-label">Login</label>
			<div class="input-group">
				<div class="input-group-text"><i class="fas fa-sign-in-alt"></i></div>
				@Html.TextBoxFor(model => model.Login, new { @class = "form-control", placeholder = "Login" })
			</div>
		</div>
		<div class="col-12">
			<label for="inputEmail" class="form-label">Email</label>
			<div class="input-group">
				<div class="input-group-text"><i class="fas fa-envelope"></i></div>
				@Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "email@example.com" })
			</div>
			@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
		</div>
		<div class="col-12">
			<label for="inputTelephone" class="form-label">Telephone</label>
			<div class="input-group">
				<div class="input-group-text"><i class="fas fa-phone"></i></div>
				@Html.TextBoxFor(model => model.Telephone, new { @class = "form-control", placeholder = "Telephone" })
			</div>
			@Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
		</div>
		<div class="col-6">
			<label for="inputState" class="form-label">Role</label>
			@Html.DropDownListFor(model => model.Role, (SelectList)ViewBag.Roles,  new { @class = "form-select", id = "inputState" })
		</div>
	</div>
	<div class="modal-footer">
		<button type="button" id="cancelButton" class="btn btn-outline-dark" data-bs-dismiss="modal">Cancel</button>
		<button type="submit" id="saveChanges" class="btn btn-outline-warning">Modify</button>
		@*<button type="submit" id="saveChanges" class="btn btn-outline-warning" onclick="goToAllUsers()">Modify</button>*@
	</div>
}

<script>
	$(document).ready(function () {
		$('#editForm').on('submit', function (event) {
			event.preventDefault();

			$.ajax({
				url: '/User/UpdateUser',
				type: 'POST',
				data: $(this).serialize(), 
				success: function (response) {

					console.log('Form submitted successfully');
					$('#main-modal').modal('hide'); 
					$('#usersList').DataTable().ajax.reload();
				},
				error: function (xhr, status, error) {

					console.error('Form submission failed:', error);
				}
			});
		});
	});
</script>